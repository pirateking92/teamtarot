import { c as create_ssr_component, e as escape } from './ssr-tGUPulqZ.js';
import './polyfill-Blv1Oeyl.js';

/* empty css                                                       */
const css = {
  code: '@import url("https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap");html{background-image:url("/assets/2-parlor.png");background-size:cover;background-position:center;background-repeat:no-repeat;height:100%}body{margin:0;padding:0;font-family:MedievalSharp, Arial, Helvetica, sans-serif;color:rgb(197, 176, 176)}.card-display-title.svelte-afoihh.svelte-afoihh{color:whitesmoke;font-family:MedievalSharp, Arial, Helvetica, sans-serif;opacity:70%}.deck-image.svelte-afoihh.svelte-afoihh{max-width:160px;max-height:270px;border:0.25em rgb(50, 17, 3) solid;box-shadow:0 0 20px 10px rgba(197, 126, 34, 0.5);transition:0.2s;position:absolute;align-self:flex-end;justify-self:center;margin:5em 0 0 0;animation:svelte-afoihh-box 2s infinite}.deck-image.svelte-afoihh.svelte-afoihh::before{content:"";position:absolute;inset:2px;background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.7),\n      rgba(80, 13, 2, 0.5)\n    );border-radius:20px}.three-cards-container.svelte-afoihh.svelte-afoihh{min-height:45em;display:grid}.bg-card-container.svelte-afoihh.svelte-afoihh{background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.9),\n      rgba(80, 13, 2, 0.8)\n    );font-family:MedievalSharp, Arial, Helvetica, sans-serif;padding:2em auto;margin:1em auto;text-align:center;border:3px solid black;border-radius:50px;min-height:35em;min-width:336px;align-content:center}.bg-card-container.svelte-afoihh.svelte-afoihh:hover{box-shadow:0 0 20px 10px rgba(197, 126, 34, 0.5)}#get-fate-btn.svelte-afoihh.svelte-afoihh{letter-spacing:0.4rem;font-size:1.6rem;width:15em;padding:0.5em 0;margin:5em auto auto auto;max-height:3em;position:absolute;justify-self:center;align-self:flex-end}#guide-box.svelte-afoihh.svelte-afoihh{letter-spacing:0.16rem;background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.9),\n      rgba(80, 13, 2, 1)\n    );border-radius:10px;font-size:1.2rem;padding:0.5em 1.2em;margin:auto auto -1.7em auto;max-height:5em;border:3px solid black;justify-self:center;text-align:center;align-self:center;font-family:MedievalSharp, Arial, Helvetica, sans-serif}#get-fate-btn.svelte-afoihh.svelte-afoihh:hover{background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.4),\n      rgba(12, 3, 2, 0.4)\n    )}.meaning-text.svelte-afoihh.svelte-afoihh{max-width:18em;display:block;margin:auto;transition:1s ease;line-height:2em}.interpretation-text.svelte-afoihh.svelte-afoihh{font-size:1.1em;line-height:1.6em}.modal-backdrop.svelte-afoihh.svelte-afoihh{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0, 0, 0, 0);z-index:999}.interpretation-modal.svelte-afoihh.svelte-afoihh{position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);z-index:1000}.close-button.svelte-afoihh.svelte-afoihh{position:absolute;top:15px;right:30px;background:none;border:none;color:#fff;font-size:15px;cursor:pointer}.interpretation-container.svelte-afoihh.svelte-afoihh{display:block;background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.9),\n      rgba(80, 13, 2, 0.8)\n    );font-family:MedievalSharp, Arial, Helvetica, sans-serif;padding:2em;margin:13em auto;text-align:center;border:3px solid black;border-radius:50px;min-height:35em;align-content:center;align-self:center;position:relative}button.svelte-afoihh.svelte-afoihh{position:relative;background:#200505;color:rgb(197, 176, 176);text-decoration:none;text-transform:uppercase;border:none;letter-spacing:0.1rem;font-size:0.8rem;padding:0.6rem 2rem;transition:0.2s;animation:svelte-afoihh-box 2s infinite;border-radius:20px;font-family:MedievalSharp, Arial, Helvetica, sans-serif}button.svelte-afoihh.svelte-afoihh:hover{letter-spacing:0.1rem;padding:0.6rem 2rem;background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.7),\n      rgba(80, 13, 2, 0.5)\n    );animation:svelte-afoihh-box 1.5s infinite}button.svelte-afoihh.svelte-afoihh::before{content:"";position:absolute;inset:2px;background:linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.7),\n      rgba(80, 13, 2, 0.5)\n    );border-radius:20px}button.svelte-afoihh span.svelte-afoihh{position:relative;z-index:1}button.svelte-afoihh i.svelte-afoihh{position:absolute;inset:0;display:block}button.svelte-afoihh i.svelte-afoihh::before{content:"";position:absolute;width:10px;height:2px;left:80%;top:-2px;border:2px solid var(--clr);background:#272822;transition:0.2s}button.svelte-afoihh:hover i.svelte-afoihh::before{width:15px;left:20%;animation:svelte-afoihh-move 3s infinite}button.svelte-afoihh i.svelte-afoihh::after{content:"";position:absolute;width:10px;height:2px;left:20%;bottom:-2px;border:2px solid var(--clr);background:#272822;transition:0.2s}button.svelte-afoihh:hover i.svelte-afoihh::after{width:15px;left:80%;animation:svelte-afoihh-move 3s infinite}.container.hidden.svelte-afoihh.svelte-afoihh{display:none}@keyframes svelte-afoihh-move{0%{transform:translateX(0)}50%{transform:translateX(5px)}100%{transform:translateX(0)}}@keyframes svelte-afoihh-box{0%{box-shadow:#27272c}50%{box-shadow:0 0 25px var(--clr)}100%{box-shadow:#27272c}}.flip-card.svelte-afoihh.svelte-afoihh{background-color:transparent;width:330px;height:340px;perspective:1000px}.flip-card-inner.svelte-afoihh.svelte-afoihh{position:relative;width:100%;height:100%;text-align:center;transition:transform 0.4s;transform-style:preserve-3d}.flip-it.svelte-afoihh.svelte-afoihh{transform:scaleX(-1)}',
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from \\"svelte\\";\\n  import { fade } from \\"svelte/transition\\";\\n  import Typewriter from \\"svelte-typewriter\\";\\n  import Flashcard from \\"./Flashcard.svelte\\";\\n\\n  let userName = \\"\\";\\n  let userStory = \\"\\";\\n  let threeCards = [];\\n  let requestID = null;\\n  let isLoading = true;\\n  let error = null;\\n  let interpretation = null;\\n  let showInterpretation = false;\\n  let postShowInterpretation = false;\\n  let showButton = false;\\n  let flipped = [false, false, false];\\n  let postFlip = [false, false, false];\\n  let isCardVisible = [false, false, false];\\n  let showDeck = true;\\n  let showGuide = true;\\n  let hovered = [false, false, false];\\n\\n  // function showPopup() {\\n  //   document.getElementById(\\"popup\\").classList.remove(\\"hidden\\");\\n  // }\\n\\n  // function hidePopup() {\\n  //   document.getElementById(\\"popup\\").classList.add(\\"hidden\\");\\n  // }\\n\\n  function handleButtonClick() {\\n    window.location.href = \\"/\\";\\n  }\\n\\n  function handleCardClick(index) {\\n    if (isCardVisible.every((value) => value === true)) {\\n      if (flipped[index] == false) {\\n        flipped[index] = !flipped[index];\\n      }\\n      if (flipped.every((value) => value === true)) {\\n        showButton = true;\\n        showGuide = false;\\n      }\\n    }\\n  }\\n\\n  function drawCard() {\\n    for (let i = 0; i < isCardVisible.length; i++) {\\n      if (isCardVisible[i] === false) {\\n        isCardVisible[i] = true;\\n        if (isCardVisible.every((value) => value === true)) {\\n          showDeck = false;\\n        }\\n        break;\\n      }\\n    }\\n  }\\n\\n  function closeInterpretationModal() {\\n    showInterpretation = false;\\n  }\\n\\n  if (typeof window !== \\"undefined\\") {\\n    const urlParams = new URLSearchParams(window.location.search);\\n    userName = urlParams.get(\\"name\\") || \\"\\";\\n    userStory = urlParams.get(\\"userstory\\") || \\"\\";\\n  }\\n  console.log(userName);\\n  console.log(userStory);\\n\\n  async function getFate() {\\n    try {\\n      let data;\\n      do {\\n        const res = await fetch(\\n          `https://teamtarot.onrender.com/cards/interpret/${requestID}`\\n        );\\n        data = await res.json();\\n        if (data.interpretation) {\\n          interpretation = data.interpretation;\\n        } else {\\n          // Wait for 1 second before trying again\\n          await new Promise((resolve) => setTimeout(resolve, 1000));\\n        }\\n      } while (!data.interpretation);\\n    } catch (err) {\\n      error = err.message;\\n      console.error(\\"Error:\\", err);\\n    } finally {\\n      showInterpretation = true;\\n      postShowInterpretation = true;\\n    }\\n  }\\n\\n  onMount(async () => {\\n    document.querySelector(\\".container\\").classList.remove(\\"hidden\\");\\n    try {\\n      const res = await fetch(\\n        `https://teamtarot.onrender.com/cards?name=${userName}&userstory=${userStory}`\\n      );\\n      const data = await res.text();\\n      threeCards = JSON.parse(data).cards;\\n      requestID = JSON.parse(data).requestID;\\n      postFlip = [false, false, false];\\n    } catch (err) {\\n      error = err.message;\\n      console.error(\\"Error:\\", err);\\n    } finally {\\n      isLoading = false;\\n    }\\n  });\\n\\n  // let isHovering = [false, false, false];\\n\\n  // function hoverCard(index) {\\n  //   isHovering[index] = true;\\n  // }\\n\\n  // function unhoverCard(index) {\\n  //   isHovering[index] = false;\\n  // }\\n\\n  // <!-- on:mouseenter={() => hoverCard(index)}\\n  //             on:mouseleave={() => unhoverCard(index)} -->\\n<\/script>\\n\\n<link\\n  href=\\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\\"\\n  rel=\\"stylesheet\\"\\n/>\\n<div class=\\"container mx-auto mt-8 hidden\\">\\n  <div class=\\"flex justify-between items-center mb-8\\">\\n    <h3 class=\\"text-2xl font-bold card-display-title\\">Cassandra\'s Parlor</h3>\\n    {#if showGuide && isCardVisible.every((value) => value === true)}\\n      <div\\n        class=\\"mx-auto mt-8 min-h-50\\"\\n        id=\\"guide-box\\"\\n        style=\\"--clr:#200505; grid-area: guide;\\"\\n        transition:fade\\n      >\\n        <span>Now, flip the cards</span><i></i>\\n      </div>\\n    {:else if showGuide}\\n      <div\\n        class=\\"mx-auto mt-8 min-h-50\\"\\n        id=\\"guide-box\\"\\n        style=\\"--clr:#200505; grid-area: guide;\\"\\n      >\\n        <span>Draw three cards from the deck, {userName}</span><i></i>\\n      </div>\\n    {/if}\\n    <button on:click={handleButtonClick} style=\\"--clr:#871616\\"\\n      ><span>Leave the Parlor</span><i></i></button\\n    >\\n  </div>\\n\\n  {#if isLoading}\\n    <div>\\n      <p>Loading...</p>\\n    </div>\\n  {:else if error}\\n    <p class=\\"text-red-500\\">Error: {error}</p>\\n  {:else if !showInterpretation}\\n    <div class=\\"three-cards-container mx-auto px-20\\">\\n      <div\\n        class=\\"grid grid-cols-3 md:grid-cols-3 gap-4\\"\\n        style=\\"grid-template-columns: 1fr 1fr 1fr;\\n        grid-template-rows: 0.1fr 0.3fr 0.3fr 0.1fr 0.3fr;\\n        grid-template-areas: \\n        \'button card-present-1 guide\'\\n        \'card-past-0 card-present-1 card-future-2\'\\n        \'card-past-0 card-present-1 card-future-2\'\\n        \'card-past-0 deck card-future-2\'\\n        \'........... deck .............\'\\"\\n      >\\n        {#each threeCards as card, index}\\n          {#if index === 0}\\n            <div\\n              class=\\"bg-card-container\\"\\n              on:mouseenter={() => {\\n                if (postFlip[index]) hovered[index] = true;\\n                console.log(\\"Postflip below\\");\\n                console.log(postFlip[index]);\\n                console.log(\\"Hovered below\\");\\n                console.log(hovered[index]);\\n              }}\\n              on:mouseleave={() => {\\n                if (isCardVisible[index] && flipped[index])\\n                  (hovered[index] = false), (postFlip[index] = true);\\n                console.log(postFlip[index]);\\n              }}\\n              role=\\"link\\"\\n              tabindex=\\"0\\"\\n              style=\\"grid-area: card-past-{index};\\"\\n              transition:fade\\n            >\\n              <h2 class=\\"text-xl font-semibold mb-2\\">\\n                <span>Past</span>\\n              </h2>\\n              {#if isCardVisible[index]}\\n                {#if flipped[index]}\\n                  <h2 class=\\"text-xl mt-2 font-semibold mb-2\\">{card.name}</h2>\\n                  <!-- <p class=\\"text-#fed7aa-600 mb-2\\">Type: {card.type}</p> -->\\n                {/if}\\n                {#if hovered[index] && flipped[index]}\\n                  {#if card.reversed}\\n                    <p class=\\"meaning-text text-#fed7aa-600 mb-2\\">\\n                      Meaning: <br /><br />\\n                      {card.meaning_rev}\\n                    </p>\\n                  {:else}\\n                    <p class=\\"meaning-text text-#fed7aa-600 mb-2\\">\\n                      Meaning: <br /><br />\\n                      {card.meaning_up}\\n                    </p>\\n                  {/if}\\n                {:else if isCardVisible[index]}\\n                  <div class=\\"flip-card\\">\\n                    <div class=\\"flip-card-inner\\" class:flip-it={flipped[index]}>\\n                      <div\\n                        on:click={() => handleCardClick(index)}\\n                        on:keydown={(event) => {}}\\n                        tabindex=\\"0\\"\\n                        role=\\"button\\"\\n                      >\\n                        <Flashcard\\n                          cardBack={`/assets/tarot_back.png`}\\n                          cardFront={`/assets/${card.image_file_name}`}\\n                          flipped={flipped[index]}\\n                          reversed={card.reversed}\\n                        />\\n                      </div>\\n                    </div>\\n                  </div>\\n                {/if}\\n              {/if}\\n            </div>\\n          {:else if index === threeCards.length - 1}\\n            <div\\n              class=\\"bg-card-container\\"\\n              on:mouseenter={() => {\\n                if (postFlip[index]) hovered[index] = true;\\n                console.log(postFlip[index]);\\n              }}\\n              on:mouseleave={() => {\\n                if (isCardVisible[index] && flipped[index])\\n                  (hovered[index] = false), (postFlip[index] = true);\\n                console.log(postFlip[index]);\\n              }}\\n              role=\\"link\\"\\n              tabindex=\\"0\\"\\n              style=\\"grid-area: card-future-{index};\\"\\n            >\\n              <h2 class=\\"text-xl font-semibold mb-2\\">\\n                <span>Future</span>\\n              </h2>\\n              {#if isCardVisible[index]}\\n                {#if flipped[index]}\\n                  <h2 class=\\"text-xl mt-2 font-semibold mb-2\\">{card.name}</h2>\\n                  <!-- <p class=\\"text-#fed7aa-600 mb-2\\">Type: {card.type}</p> -->\\n                {/if}\\n                {#if hovered[index] && flipped[index]}\\n                  {#if card.reversed}\\n                    <p class=\\"meaning-text text-#fed7aa-600 mb-2\\">\\n                      Meaning: <br /><br />\\n                      {card.meaning_rev}\\n                    </p>\\n                  {:else}\\n                    <p class=\\"meaning-text text-#fed7aa-600 mb-2\\">\\n                      Meaning: <br /><br />\\n                      {card.meaning_up}\\n                    </p>\\n                  {/if}\\n                {:else if isCardVisible[index]}\\n                  <div class=\\"flip-card\\">\\n                    <div class=\\"flip-card-inner\\" class:flip-it={flipped[index]}>\\n                      <div\\n                        on:click={() => handleCardClick(index)}\\n                        on:keydown={(event) => {}}\\n                        tabindex=\\"0\\"\\n                        role=\\"button\\"\\n                      >\\n                        <Flashcard\\n                          cardBack={`/assets/tarot_back.png`}\\n                          cardFront={`/assets/${card.image_file_name}`}\\n                          flipped={flipped[index]}\\n                          reversed={card.reversed}\\n                        />\\n                      </div>\\n                    </div>\\n                  </div>\\n                {/if}\\n              {/if}\\n            </div>\\n          {:else if index === threeCards.length - 2}\\n            <div\\n              class=\\"bg-card-container\\"\\n              on:mouseenter={() => {\\n                if (postFlip[index]) hovered[index] = true;\\n                console.log(postFlip[index]);\\n              }}\\n              on:mouseleave={() => {\\n                if (isCardVisible[index] && flipped[index])\\n                  (hovered[index] = false), (postFlip[index] = true);\\n                console.log(postFlip[index]);\\n              }}\\n              role=\\"link\\"\\n              tabindex=\\"0\\"\\n              style=\\"grid-area: card-present-{index};\\"\\n            >\\n              <h2 class=\\"text-xl font-semibold mb-2\\">\\n                <span>Present</span>\\n              </h2>\\n              {#if isCardVisible[index]}\\n                {#if flipped[index]}\\n                  <h2 class=\\"text-xl mt-2 font-semibold mb-2\\">{card.name}</h2>\\n                  <!-- <p class=\\"text-#fed7aa-600 mb-2\\">Type: {card.type}</p> -->\\n                {/if}\\n                {#if hovered[index] && flipped[index]}\\n                  {#if card.reversed}\\n                    <p class=\\"meaning-text text-#fed7aa-600 mb-2\\">\\n                      Meaning: <br /><br />\\n                      {card.meaning_rev}\\n                    </p>\\n                  {:else}\\n                    <p class=\\"meaning-text text-#fed7aa-600 mb-2\\">\\n                      Meaning: <br /><br />\\n                      {card.meaning_up}\\n                    </p>\\n                  {/if}\\n                {:else if isCardVisible[index]}\\n                  <div class=\\"flip-card\\">\\n                    <div class=\\"flip-card-inner\\" class:flip-it={flipped[index]}>\\n                      <div\\n                        on:click={() => handleCardClick(index)}\\n                        on:keydown={(event) => {}}\\n                        tabindex=\\"0\\"\\n                        role=\\"button\\"\\n                      >\\n                        <Flashcard\\n                          cardBack={`/assets/tarot_back.png`}\\n                          cardFront={`/assets/${card.image_file_name}`}\\n                          flipped={flipped[index]}\\n                          reversed={card.reversed}\\n                        />\\n                      </div>\\n                    </div>\\n                  </div>\\n                {/if}\\n              {/if}\\n            </div>\\n          {/if}\\n        {/each}\\n        {#if showDeck}\\n          <img\\n            on:click={drawCard}\\n            src={`/assets/tarot_deck.png`}\\n            alt=\\"deck\\"\\n            class=\\"mb-2 rounded-lg deck-image\\"\\n            style=\\"grid-area: deck;\\"\\n          />\\n        {/if}\\n        {#if showButton && !postShowInterpretation}\\n          <button\\n            transition:fade\\n            on:click={getFate}\\n            class=\\"mx-auto mt-8\\"\\n            id=\\"get-fate-btn\\"\\n            style=\\"--clr:#200505; grid-area: button;\\"\\n            ><span>Ask for reading</span><i></i></button\\n          >\\n        {:else if showButton}\\n          <button\\n            transition:fade\\n            on:click={getFate}\\n            class=\\"mx-auto mt-8\\"\\n            id=\\"get-fate-btn\\"\\n            style=\\"--clr:#200505; grid-area: button;\\"\\n            ><span>Show reading</span><i></i></button\\n          >\\n        {/if}\\n      </div>\\n    </div>\\n  {:else}\\n    <div class=\\"modal-backdrop\\">\\n      <div class=\\"interpretation-modal\\">\\n        <div\\n          class=\\"interpretation-container shadow-md p-4 rounded-lg\\"\\n          transition:fade\\n        >\\n          <button class=\\"close-button\\" on:click={closeInterpretationModal}\\n            >back</button\\n          >\\n          <p class=\\"interpretation-text\\" style=\\"white-space: pre-line;\\">\\n            {interpretation}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  {/if}\\n</div>\\n\\n<style>\\n  @import url(\\"https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap\\");\\n\\n  :global(html) {\\n    background-image: url(\\"/assets/2-parlor.png\\");\\n    background-size: cover; /* Adjust as needed */\\n    background-position: center; /* Adjust as needed */\\n    background-repeat: no-repeat;\\n    height: 100%;\\n  }\\n\\n  :global(body) {\\n    margin: 0;\\n    padding: 0;\\n    font-family: MedievalSharp, Arial, Helvetica, sans-serif;\\n    color: rgb(197, 176, 176);\\n  }\\n\\n  .card-display-title {\\n    color: whitesmoke;\\n    font-family: MedievalSharp, Arial, Helvetica, sans-serif;\\n    opacity: 70%;\\n  }\\n\\n  .deck-image {\\n    max-width: 160px; /* Set the desired maximum width */\\n    max-height: 270px; /* Set the desired maximum height */\\n    border: 0.25em rgb(50, 17, 3) solid;\\n    box-shadow: 0 0 20px 10px rgba(197, 126, 34, 0.5);\\n    transition: 0.2s;\\n    position: absolute;\\n    align-self: flex-end;\\n    justify-self: center;\\n    margin: 5em 0 0 0;\\n    animation: box 2s infinite;\\n  }\\n\\n  .deck-image::before {\\n    content: \\"\\";\\n    position: absolute;\\n    inset: 2px;\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.7),\\n      rgba(80, 13, 2, 0.5)\\n    );\\n    border-radius: 20px;\\n  }\\n\\n  .three-cards-container {\\n    min-height: 45em;\\n    display: grid;\\n  }\\n\\n  .bg-card-container {\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.9),\\n      rgba(80, 13, 2, 0.8)\\n    );\\n    font-family: MedievalSharp, Arial, Helvetica, sans-serif;\\n    padding: 2em auto;\\n    margin: 1em auto;\\n    text-align: center;\\n    border: 3px solid black;\\n    border-radius: 50px;\\n    min-height: 35em;\\n    min-width: 336px;\\n    align-content: center;\\n  }\\n\\n  .bg-card-container:hover {\\n    box-shadow: 0 0 20px 10px rgba(197, 126, 34, 0.5);\\n  }\\n\\n  #get-fate-btn {\\n    letter-spacing: 0.4rem;\\n    font-size: 1.6rem;\\n    width: 15em;\\n    padding: 0.5em 0;\\n    margin: 5em auto auto auto;\\n    max-height: 3em;\\n    position: absolute;\\n    justify-self: center;\\n    align-self: flex-end;\\n  }\\n\\n  #guide-box {\\n    letter-spacing: 0.16rem;\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.9),\\n      rgba(80, 13, 2, 1)\\n    );\\n    border-radius: 10px;\\n    font-size: 1.2rem;\\n\\n    padding: 0.5em 1.2em;\\n    margin: auto auto -1.7em auto;\\n    max-height: 5em;\\n    border: 3px solid black;\\n    justify-self: center;\\n    text-align: center;\\n    align-self: center;\\n    font-family: MedievalSharp, Arial, Helvetica, sans-serif;\\n  }\\n\\n  #get-fate-btn:hover {\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.4),\\n      rgba(12, 3, 2, 0.4)\\n    );\\n  }\\n\\n  .meaning-text {\\n    max-width: 18em;\\n    display: block;\\n    margin: auto;\\n    transition: 1s ease;\\n    line-height: 2em;\\n  }\\n\\n  .interpretation-text {\\n    font-size: 1.1em;\\n    line-height: 1.6em;\\n  }\\n\\n  .modal-backdrop {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(0, 0, 0, 0); /* Semi-transparent black */\\n    z-index: 999;\\n  }\\n\\n  .interpretation-modal {\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    z-index: 1000; /* Ensure it\'s above the backdrop */\\n  }\\n\\n  .close-button {\\n    position: absolute;\\n    top: 15px;\\n    right: 30px;\\n    background: none;\\n    border: none;\\n    color: #fff;\\n    font-size: 15px;\\n    cursor: pointer;\\n  }\\n\\n  .interpretation-container {\\n    display: block;\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.9),\\n      rgba(80, 13, 2, 0.8)\\n    );\\n    font-family: MedievalSharp, Arial, Helvetica, sans-serif;\\n    padding: 2em;\\n    margin: 13em auto;\\n    text-align: center;\\n    border: 3px solid black;\\n    border-radius: 50px;\\n    min-height: 35em;\\n    align-content: center;\\n    align-self: center;\\n    position: relative;\\n  }\\n\\n  /* BUTTON STYLING BELOW */\\n\\n  button {\\n    position: relative;\\n    background: #200505;\\n    color: rgb(197, 176, 176);\\n    text-decoration: none;\\n    text-transform: uppercase;\\n    border: none;\\n    letter-spacing: 0.1rem;\\n    font-size: 0.8rem;\\n    padding: 0.6rem 2rem;\\n    transition: 0.2s;\\n    animation: box 2s infinite;\\n    border-radius: 20px;\\n    font-family: MedievalSharp, Arial, Helvetica, sans-serif;\\n  }\\n\\n  button:hover {\\n    letter-spacing: 0.1rem;\\n    padding: 0.6rem 2rem;\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.7),\\n      rgba(80, 13, 2, 0.5)\\n    );\\n    /* box-shadow: 0 0 35px var(--clr); */\\n    animation: box 1.5s infinite;\\n  }\\n\\n  button::before {\\n    content: \\"\\";\\n    position: absolute;\\n    inset: 2px;\\n    background: linear-gradient(\\n      to right,\\n      rgba(0, 0, 0, 0.7),\\n      rgba(80, 13, 2, 0.5)\\n    );\\n    border-radius: 20px;\\n  }\\n\\n  button span {\\n    position: relative;\\n    z-index: 1;\\n  }\\n  button i {\\n    position: absolute;\\n    inset: 0;\\n    display: block;\\n  }\\n\\n  button i::before {\\n    content: \\"\\";\\n    position: absolute;\\n    width: 10px;\\n    height: 2px;\\n    left: 80%;\\n    top: -2px;\\n    border: 2px solid var(--clr);\\n    background: #272822;\\n    transition: 0.2s;\\n  }\\n\\n  button:hover i::before {\\n    width: 15px;\\n    left: 20%;\\n    animation: move 3s infinite;\\n  }\\n\\n  button i::after {\\n    content: \\"\\";\\n    position: absolute;\\n    width: 10px;\\n    height: 2px;\\n    left: 20%;\\n    bottom: -2px;\\n    border: 2px solid var(--clr);\\n    background: #272822;\\n    transition: 0.2s;\\n  }\\n\\n  button:hover i::after {\\n    width: 15px;\\n    left: 80%;\\n    animation: move 3s infinite;\\n  }\\n\\n  .container.hidden {\\n    display: none;\\n  }\\n\\n  @keyframes move {\\n    0% {\\n      transform: translateX(0);\\n    }\\n    50% {\\n      transform: translateX(5px);\\n    }\\n    100% {\\n      transform: translateX(0);\\n    }\\n  }\\n\\n  @keyframes box {\\n    0% {\\n      box-shadow: #27272c;\\n    }\\n    50% {\\n      box-shadow: 0 0 25px var(--clr);\\n    }\\n    100% {\\n      box-shadow: #27272c;\\n    }\\n  }\\n\\n  .flip-card {\\n    background-color: transparent;\\n    width: 330px;\\n    height: 340px; /* the max this can be without distorting the grid */\\n    perspective: 1000px; /* Remove this if you don\'t want the 3D effect */\\n  }\\n\\n  /* This container is needed to position the front and back side */\\n  .flip-card-inner {\\n    position: relative;\\n    width: 100%;\\n    height: 100%;\\n    text-align: center;\\n    transition: transform 0.4s;\\n    transform-style: preserve-3d;\\n  }\\n\\n  .flip-it {\\n    transform: scaleX(-1);\\n  }\\n</style>\\n"],"names":[],"mappings":"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"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let userName = "";
  let userStory = "";
  let isCardVisible = [false, false, false];
  if (typeof window !== "undefined") {
    const urlParams = new URLSearchParams(window.location.search);
    userName = urlParams.get("name") || "";
    userStory = urlParams.get("userstory") || "";
  }
  console.log(userName);
  console.log(userStory);
  $$result.css.add(css);
  return `<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"> <div class="container mx-auto mt-8 hidden svelte-afoihh"><div class="flex justify-between items-center mb-8"><h3 class="text-2xl font-bold card-display-title svelte-afoihh" data-svelte-h="svelte-uaewp8">Cassandra&#39;s Parlor</h3> ${isCardVisible.every((value) => value === true) ? `<div class="mx-auto mt-8 min-h-50 svelte-afoihh" id="guide-box" style="--clr:#200505; grid-area: guide;" data-svelte-h="svelte-1hfbpzj"><span>Now, flip the cards</span><i></i></div>` : `${`<div class="mx-auto mt-8 min-h-50 svelte-afoihh" id="guide-box" style="--clr:#200505; grid-area: guide;"><span>Draw three cards from the deck, ${escape(userName)}</span><i></i></div>`}`} <button style="--clr:#871616" class="svelte-afoihh" data-svelte-h="svelte-v2z57r"><span class="svelte-afoihh">Leave the Parlor</span><i class="svelte-afoihh"></i></button></div> ${`<div data-svelte-h="svelte-18qo6yz"><p>Loading...</p></div>`} </div>`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-Axo6blyP.js.map
