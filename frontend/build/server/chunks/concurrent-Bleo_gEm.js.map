{"version":3,"file":"concurrent-Bleo_gEm.js","sources":["../../../.svelte-kit/adapter-node/chunks/concurrent.js"],"sourcesContent":["import { w as writeEffect } from \"./writeEffect.js\";\nimport { a as animationSetup } from \"./animationSetup.js\";\nconst descendingSortFunction = (firstElement, secondElement) => secondElement.text.length - firstElement.text.length;\nconst getLongestTextElement = (elements) => {\n  const descendingTextLengthOrder = elements.sort(descendingSortFunction);\n  const longestTextElement = descendingTextLengthOrder[0].currentNode;\n  return longestTextElement;\n};\nconst onAnimationEnd = (element, callback) => {\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      const elementAttributeChanged = mutation.type === \"attributes\";\n      const elementFinishedTyping = mutation.target.classList.contains(\"finished-typing\");\n      if (elementAttributeChanged && elementFinishedTyping)\n        callback();\n    });\n  });\n  observer.observe(element, {\n    attributes: true,\n    childList: true,\n    subtree: true\n  });\n};\nconst concurrent = (node, props) => {\n  const { options, elements } = animationSetup(node, props);\n  const lastElementToFinish = getLongestTextElement(elements);\n  onAnimationEnd(lastElementToFinish, () => options.dispatch(\"done\"));\n  for (const element of elements) {\n    writeEffect(element, options).then(() => {\n      if (options.keepCursorOnFinish) {\n        const isNotLongestElement = element.currentNode !== lastElementToFinish;\n        isNotLongestElement ? element.currentNode.classList.replace(\"typing\", \"finished-typing\") : options.dispatch(\"done\");\n      } else {\n        element.currentNode.classList.replace(\"typing\", \"finished-typing\");\n      }\n      const cursorHasTimeout = typeof options.keepCursorOnFinish === \"number\";\n      cursorHasTimeout && setTimeout(() => {\n        element.currentNode.classList.replace(\"typing\", \"finished-typing\");\n      }, options.keepCursorOnFinish);\n    });\n  }\n  return {\n    update() {\n    },\n    destroy() {\n    }\n  };\n};\nexport {\n  concurrent as default\n};\n"],"names":[],"mappings":";;;;AAEA,MAAM,sBAAsB,GAAG,CAAC,YAAY,EAAE,aAAa,KAAK,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;AACrH,MAAM,qBAAqB,GAAG,CAAC,QAAQ,KAAK;AAC5C,EAAE,MAAM,yBAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;AAC1E,EAAE,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AACtE,EAAE,OAAO,kBAAkB,CAAC;AAC5B,CAAC,CAAC;AACF,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,KAAK;AAC9C,EAAE,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,CAAC,SAAS,KAAK;AACvD,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK;AACpC,MAAM,MAAM,uBAAuB,GAAG,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC;AACrE,MAAM,MAAM,qBAAqB,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;AAC1F,MAAM,IAAI,uBAAuB,IAAI,qBAAqB;AAC1D,QAAQ,QAAQ,EAAE,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL,EAAE,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;AAC5B,IAAI,UAAU,EAAE,IAAI;AACpB,IAAI,SAAS,EAAE,IAAI;AACnB,IAAI,OAAO,EAAE,IAAI;AACjB,GAAG,CAAC,CAAC;AACL,CAAC,CAAC;AACG,MAAC,UAAU,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;AACpC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5D,EAAE,MAAM,mBAAmB,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAC9D,EAAE,cAAc,CAAC,mBAAmB,EAAE,MAAM,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACtE,EAAE,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;AAClC,IAAI,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM;AAC7C,MAAM,IAAI,OAAO,CAAC,kBAAkB,EAAE;AACtC,QAAQ,MAAM,mBAAmB,GAAG,OAAO,CAAC,WAAW,KAAK,mBAAmB,CAAC;AAChF,QAAQ,mBAAmB,GAAG,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5H,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC3E,OAAO;AACP,MAAM,MAAM,gBAAgB,GAAG,OAAO,OAAO,CAAC,kBAAkB,KAAK,QAAQ,CAAC;AAC9E,MAAM,gBAAgB,IAAI,UAAU,CAAC,MAAM;AAC3C,QAAQ,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC3E,OAAO,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACrC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,OAAO;AACT,IAAI,MAAM,GAAG;AACb,KAAK;AACL,IAAI,OAAO,GAAG;AACd,KAAK;AACL,GAAG,CAAC;AACJ;;;;"}